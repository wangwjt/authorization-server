plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id "org.hidetake.ssh" version "2.10.1"
    id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'war'

group = 'cn.edu.gzmu'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.RELEASE")
}


idea {
    module {
        downloadSources = true
    }
}

dependencies {
    implementation(
            'net.minidev:json-smart:2.3',
            'org.wso2.orbit.com.nimbusds:nimbus-jose-jwt:5.8.0.wso2v1',
            'org.apache.commons:commons-lang3:3.9',
            'org.apache.httpcomponents:httpclient:4.5.10',
            'com.alibaba:druid-spring-boot-starter:1.1.21',
            'com.alibaba:fastjson:1.2.62',
            'com.alibaba:druid:1.1.21',
            'org.jetbrains:annotations:18.0.0'
    )
    implementation(
            'com.github.ben-manes.caffeine:caffeine',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.cloud:spring-cloud-starter-oauth2',
            'org.springframework.cloud:spring-cloud-starter-security',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-thymeleaf',
            'org.springframework.boot:spring-boot-starter-mail',
            'org.springframework.boot:spring-boot-starter-data-redis',
            'org.springframework.boot:spring-boot-starter-data-rest',
            'org.springframework.session:spring-session-data-redis'
    )
    implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-netflix-ribbon'
    }
    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok'
    )
    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test'
    )
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "authorization-server.${archiveExtension.get()}"
}

remotes {
    cloud {
        host = '118.24.1.170'
        user = 'root'
        identity = file("${System.properties['user.home']}/公共/EchoCow")
    }
}

task copy(dependsOn: bootJar) {
    doLast {
        ssh.run {
            session(remotes.cloud) {
                def result = execute 'rm -rf gzmu-auth/authorization-server.jar'
                println "delete exist jar ${result}"
                println 'copy jar'
                put from: "${buildDir.toString()}/libs/authorization-server.jar", into: "/root/gzmu-auth"
                println "copy ok"
            }
        }
    }
}

task restart(dependsOn: copy) {
    doLast {
        ssh.run {
            session(remotes.cloud) {
                println 'restart service'
                execute "systemctl restart gzmu-auth"
            }
        }
    }
}